name: Deploy Spring Boot to AWS EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}

    steps:
      - name: Print Actor
        run: echo "Started by ${{ github.actor }}"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # - name: Make application.yml
      #   if: contains(github.ref, 'main')
      #   run: |
      #     mkdir -p ./src/main/resources
      #     cd ./src/main/resources
      #     echo "${{ secrets.YML }}" > application.yml
      #   shell: bash

      - name: Make application-prod.yml
        if: contains(github.ref, 'main')
        run: |
          cd ./src/main/resources
          echo "${{ secrets.YML_PROD }}" > application-prod.yml
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set Image Tag
        run: |
          CURRENT_DATE=$(date +"%Y%m%d")
          echo "FULL_IMAGE_URL=${ECR_REGISTRY}/${IMAGE_NAME}:${CURRENT_DATE}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.FULL_IMAGE_URL }}
          platforms: linux/amd64
          build-args: |

      - name: Deploy to EKS
        run: |
          aws eks --region ${{ vars.AWS_REGION }} update-kubeconfig --name ${{ vars.EKS_CLUSTER_NAME }}
          kubectl set image deployment/deploy-balbalm-walk balbalm-walk=${{ env.FULL_IMAGE_URL }} -n devocean
          kubectl rollout restart deployment/deploy-balbalm-walk -n devocean
